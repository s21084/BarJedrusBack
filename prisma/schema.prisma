// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  isAdmin    Boolean?   @default(false)
  isVerified Boolean?   @default(false)
  personId   Int?
  person     Person?    @relation(fields: [personId], references: [id])
  schedule   Schedule[]
  token      Token[]
}

model Token {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  type       String //EMAIL API
  emailToken String?  @unique
  valid      Boolean  @default(true)
  expiration DateTime
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
}

//enum TokenType{
//EMAIL
//API
//}
model Person {
  id           Int            @id @default(autoincrement())
  name         String
  surname      String
  phone        String
  Street       String?
  HomeNumber   String?
  FlatNumber   String?
  City         String?
  user         User[]
  subscription Subscription[]
}

model Dish {
  id             Int    @id @default(autoincrement())
  name           String @unique
  priceForPiece  Int?
  priceForWeight Int?
}

model Event {
  id               Int            @id @default(autoincrement())
  name             String
  date             DateTime
  decoration       Boolean
  vegeCount        Int?
  meatCount        Int?
  prePay           Int?
  priceFull        Int?
  notes            String
  informationBarId Int            @default(1)
  informationBar   InformationBar @relation(fields: [informationBarId], references: [id])
}

model Schedule {
  id               Int            @id @default(autoincrement())
  startHour        DateTime?
  endHour          DateTime?
  weekDayNumber    Int
  userId           Int
  user             User           @relation(fields: [userId], references: [id])
  informationBarId Int            @default(1)
  informationBar   InformationBar @relation(fields: [informationBarId], references: [id])
}

model Subscription {
  id             Int     @id @default(autoincrement())
  lastMonthPayed String
  dishType       Boolean
  countOfDish    Int?
  onPlace        Boolean
  notes          String?
  personId       Int
  person         Person  @relation(fields: [personId], references: [id])
}

model InformationBar {
  id        Int        @id @default(autoincrement())
  startHour DateTime
  endHour   DateTime
  bonusNote String?
  DayDish   DayDish[]
  event     Event[]
  schedule  Schedule[]
}

model DayDish {
  id               Int            @id @default(autoincrement())
  soup             String?
  secondDish       String?
  price            Int            @default(20)
  informationBarId Int            @default(1)
  informationBar   InformationBar @relation(fields: [informationBarId], references: [id])
}
